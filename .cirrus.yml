# Special .cirrus.yml file to test combination of AIO/DIO features.  WIP.

task:
  name: FreeBSD
  freebsd_instance:
    image_family: freebsd-12-1
  install_script:
    - uname -a
    - pkg install -y readline flex bison gmake perl5 p5-IPC-Run
  create_user_script:
    - pw useradd postgres
    - chown -R postgres:postgres .
  build_script:
    - su postgres -c './configure --enable-cassert --enable-debug --enable-tap-tests --with-includes=/usr/local/include --with-libs=/usr/local/lib'
    - su postgres -c 'make -s -j4'
  freebsd_worker_buf_script:
    - su postgres -c 'echo aio_type=worker > /tmp/extra.conf'
    - su postgres -c 'echo io_data_direct=off >> /tmp/extra.conf'
    - su postgres -c 'echo io_wal_direct=off >> /tmp/extra.conf'
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  freebsd_worker_dio_script:
    - su postgres -c 'echo aio_type=worker > /tmp/extra.conf'
    - su postgres -c 'echo io_data_direct=on >> /tmp/extra.conf'
    - su postgres -c 'echo io_wal_direct=on >> /tmp/extra.conf'
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  on_failure:
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name postmaster.log` ; do echo === $F === ; head -1000 $F ; done

task:
  name: macOS
  osx_instance:
    image: catalina-base
  install_script:
    - uname -a
    - cpan -T IPC::Run
  build_script:
    - export PERL5LIB=~/perl5/lib/perl5
    - ./configure --prefix=$HOME/install --enable-cassert --enable-debug --enable-tap-tests --without-readline
    - make -s -j12
    - make -s install
  macos_worker_buf_script:
    - export PERL5LIB=~/perl5/lib/perl5
    - echo aio_type=worker > /tmp/extra.conf
    - echo io_data_direct=off >> /tmp/extra.conf
    - echo io_wal_direct=off >> /tmp/extra.conf
    - TEMP_CONFIG=/tmp/extra.conf make -s check
  macos_worker_dio_script:
    - export PERL5LIB=~/perl5/lib/perl5
    - echo aio_type=worker > /tmp/extra.conf
    - echo io_data_direct=on >> /tmp/extra.conf
    - echo io_wal_direct=on >> /tmp/extra.conf
    - TEMP_CONFIG=/tmp/extra.conf make -s check
  on_failure:
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name postmaster.log` ; do echo === $F === ; head -1000 $F ; done
      - for corefile in $(find /cores/ -name 'core.*' 2>/dev/null) ; do lldb -c $corefile --batch -o 'thread backtrace all' -o 'quit' ; done

task:
  name: Linux
  container:
    dockerfile: ci/LinuxDockerfile
  env:
    CCACHE_SIZE: "500M"
    CCACHE_DIR: "/tmp/ccache_dir"
  ccache_cache:
    folder: "/tmp/ccache_dir"
  create_user_script:
    - useradd -m postgres
    - chown -R postgres:postgres .
  build_script:
    - su postgres -c './configure --enable-cassert --enable-debug --enable-tap-tests --with-liburing --with-tcl --with-python --with-perl --with-ldap --with-openssl --with-icu --with-llvm CC="ccache gcc" CXX="ccache g++" CLANG="ccache clang"'
    - su postgres -c 'make -s -j4'
  linux_worker_buf_script:
    - echo aio_type=worker > /tmp/extra.conf
    - echo io_data_direct=off >> /tmp/extra.conf
    - echo io_wal_direct=off >> /tmp/extra.conf
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  linux_worker_dio_script:
    - echo aio_type=worker > /tmp/extra.conf
    - echo io_data_direct=on >> /tmp/extra.conf
    - echo io_wal_direct=on >> /tmp/extra.conf
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  linux_io_uring_buf_script:
    - echo aio_type=io_uring > /tmp/extra.conf
    - echo io_data_direct=off >> /tmp/extra.conf
    - echo io_wal_direct=off >> /tmp/extra.conf
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  linux_io_uring_dio_script:
    - echo aio_type=io_uring > /tmp/extra.conf
    - echo io_data_direct=on >> /tmp/extra.conf
    - echo io_wal_direct=on >> /tmp/extra.conf
    - echo restart_after_crash=false >> /tmp/extra.conf
    - su postgres -c 'TEMP_CONFIG=/tmp/extra.conf make -s check'
  on_failure:
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name postmaster.log` ; do echo === $F === ; head -1000 $F ; done


task:
  name: Windows
  windows_container:
    dockerfile: ci/WindowsDockerfile
  build_script:
    - cd "c:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Auxiliary/Build"
    - vcvarsall x64
    - echo on
    - cd C:\Users\ContainerAdministrator\AppData\Local\Temp\cirrus-ci-build
    - set PATH=C:\strawberry\perl\bin;%PATH%
    - perl src/tools/msvc/mkvcbuild.pl
    - set IgnoreWarnIntDirInTempDetected=true
    - msbuild pgsql.sln
  windows_worker_buf_script:
    - set PATH=C:\strawberry\perl\bin;%PATH%
    - set TEMP_CONFIG=%TEMP%\extra.conf
    - echo aio_type=worker > %TEMP_CONFIG%
    - echo io_data_direct=off >> %TEMP_CONFIG%
    - echo io_wal_direct=off >> %TEMP_CONFIG%
    - perl src/tools/msvc/vcregress.pl check
  windows_worker_dio_script:
    - set PATH=C:\strawberry\perl\bin;%PATH%
    - set TEMP_CONFIG=%TEMP%\extra.conf
    - echo aio_type=worker > %TEMP_CONFIG%
    - echo io_data_direct=on >> %TEMP_CONFIG%
    - echo io_wal_direct=on >> %TEMP_CONFIG%
    - perl src/tools/msvc/vcregress.pl check
